#!/usr/bin/env python
#-*- coding:utf-8 -*-

# doc2pdf.py: python script to convert doc to pdf with bookmarks!
# Requires Office 2007 SP2
# Requires python for win32 extension


import sys, os
from win32com.client import Dispatch, constants, gencache

app = Dispatch("Word.Application")
# set UI un-visible, no warning
app.Visible = 0
app.DisplayAlerts = 0

def doc2pdf(input, output):
    #w = Dispatch("Word.Application")
    global app
    try:
        doc = app.Documents.Open(input, ReadOnly = 1)
        doc.ExportAsFixedFormat(output, constants.wdExportFormatPDF,
          Item = constants.wdExportDocumentWithMarkup, CreateBookmarks = constants.wdExportCreateHeadingBookmarks)
        return 0
    except:
        return 1
    finally:
        app.Documents.Close(constants.wdDoNotSaveChanges)

# Generate all the support we can.
def GenerateSupport():
  # enable python COM support for Word 2007
  # this is generated by: makepy.py -i "Microsoft Word 12.0 Object Library"
  gencache.EnsureModule('{00020905-0000-0000-C000-000000000046}', 0, 8, 4)

def walk_directory(directory):
    count = 0
    for root, dirs, files in os.walk(directory):
        # make directory
        pdf_file_dir = os.path.join(root, "pdf")
        os.mkdir(pdf_file_dir)
        for name in files:
            if name.split('.')[-1] == "doc":
                pdf_file = os.path.join(pdf_file_dir, name.split('.')[0]+".pdf")
                doc_file = os.path.join(root, name)
                if not doc2pdf(doc_file, pdf_file):
                    count = count + 1
    return count

"""
def main():
  if (len(sys.argv) == 2):
    input = sys.argv[1]
    output = os.path.splitext(input)[0]+'.pdf'
  elif (len(sys.argv) == 3):
    input = sys.argv[1]
    output = sys.argv[2]
  else:
    input = u'BA06007013.docx'#word文档的名称
    output = u'BA06007013.pdf'#pdf文档的名称
  if (not os.path.isabs(input)):
    input = os.path.abspath(input)
  if (not os.path.isabs(output)):
    output = os.path.abspath(output)
  try:
    GenerateSupport()
    rc = doc2pdf(input, output)
    return rc
  except:
    return -1
"""
def main():
    GenerateSupport()
    if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):
        return walk_directory(sys.argv[1])

if __name__=='__main__':
	rc = main()
        app.Quit(constants.wdDoNotSaveChanges)
	if not rc:
		sys.exit(rc)
	sys.exit(0)
